version: '3.9'

x-kong-config: &kong-env
  KONG_DATABASE: postgres
  KONG_PG_HOST: kong-database
  KONG_PG_USER: kong
  KONG_PG_PASSWORD: kong

volumes:
  kong-database:

networks:
  kong-net:
    external: false

services:

  kong-migration:
    container_name: kong-migration
    image: kong:3.0.0-alpine
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
    links:
      - kong-database
    depends_on:
      - kong-database
  
  konga:
      image: pantsel/konga
      container_name: konga
      environment:
        DB_ADAPTER: postgres
        DB_HOST: kong-database
        DB_DATABASE: kong
        DB_USER: kong
        DB_PASSWORD: kong
        DB_PORT: 1000
        KONGA_HOOK_TIMEOUT: 10000
        NODE_ENV: production
      ports:
      - 1337:1337
      networks:
      - kong-net

  kong-gateway:
    image: kong:3.0.0-alpine
    container_name: kong-gateway
    environment:
      <<: *kong-env
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
    networks:
      - kong-net
    ports:
      - 8000:8000
      - 8443:8443
      - 127.0.0.1:8001:8001
      - 127.0.0.1:8444:8444
      
  kong-database:
    image: postgres:14.4-alpine
    container_name: kong-database
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    ports:
     - 1000:5432
    restart: unless-stopped
    networks:
      - kong-net
    volumes:
      - kong-database:/var/lib/postgresql/data